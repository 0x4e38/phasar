image: debian:sid-slim

stages:
  - build

# install the necessary build tools 
before_script: 
  - apt update && apt-get install -y clang-5.0 libclang-5.0-dev llvm-5.0 libboost1.62-all-dev sqlite3 libsqlite3-dev bear python3 cmake zlib1g-dev libncurses5-dev graphviz doxygen libcurl4-gnutls-dev libboost1.62-dev libboost-dev libmysqlcppconn-dev
  - export PATH="/usr/lib/llvm-5.0/bin:$PATH"
  - apt install -y git
  - git submodule update --init --recursive
  
build:
  stage: build
  # build all interesting targets
  script: 
    - mkdir build
    - cd build
    - cmake -DBUILD_SHARED_LIBS=OFF -DPHASAR_BUILD_UNITTESTS=ON ..
    - make -j
#    - make test
  only:
    - master
    - restructure
  tags:
    - shared
  # save the documentation and binary
  artifacts:
    name: "PhasarFramework-$CI_BUILD_ID-$CI_BUILD_REF"
    expire_in: 1 week
    paths:
      - build/docs/
      - build/phasar
  # depending on the build setup it's a good idea to cache outputs to reduce the build time
  cache:
    paths:
      - build/lib/
