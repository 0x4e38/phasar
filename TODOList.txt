
TODO List
=========

-Create code documentation (Richard)

-Create a high level overview description of how this framework works and add it to the README.dox/ README.md.
 
-All modules can be compiled
 in parallel. If a function has been written, use a vector of threads and std::async 
 for massive parallel compilation.

-Implement (de)-serialization for ProjectIRCompiledDB (Philipp)

-(De)-Serialize boost::graph using HexaStore. Start off by serializing PointsToGraph.
 Develop a generic mechanism for that, rather than implementing dozens of different versions.

-(De)-Serialize LLVMStructTypeHierarchy using HexaStore (Richard)
	-everything that is non-graph and needs to be stored shall be stored in the seperate DB

-CD algorithm for indirect call resolution now working (currently context-insensitive)
	-make it context-sensitive by implementing the points-to graph traversal accordingly (Philipp)

-Design in-memory result data structures for (some of this stuff already exists):
	-Global points to graph
	-AliasInformation (taken plain from llvm)
	-ICFG must be modified a bit
	-IRDB
