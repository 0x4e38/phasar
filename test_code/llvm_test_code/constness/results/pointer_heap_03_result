### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N:   %2 = alloca i32*, align 8, !phasar.instruction.id !2, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %4 = bitcast i8* %3 to i32*, !phasar.instruction.id !5, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %5 = load i32*, i32** %2, align 8, !phasar.instruction.id !8, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 20, i32* %5, align 4, !phasar.instruction.id !9, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 0, i32* %1, align 4, !phasar.instruction.id !3, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %1 = alloca i32, align 4, !phasar.instruction.id !1, ID: 0 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %6 = load i32*, i32** %2, align 8, !phasar.instruction.id !10, ID: 9 in function: main
D:	  %4 = bitcast i8* %3 to i32*, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %5 = load i32*, i32** %2, align 8, !phasar.instruction.id !8, ID: 7 	V:  BOTTOM
D:	  %6 = load i32*, i32** %2, align 8, !phasar.instruction.id !10, ID: 9 	V:  BOTTOM
D:	  %9 = bitcast i32* %6 to i8*, !phasar.instruction.id !13, ID: 12 	V:  BOTTOM
D:	  %3 = call i8* @_Znwm(i64 4) #3, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   br i1 %7, label %10, label %8, !phasar.instruction.id !12, ID: 11 in function: main
D:	  %5 = load i32*, i32** %2, align 8, !phasar.instruction.id !8, ID: 7 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %3 = call i8* @_Znwm(i64 4) #3, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %9 = bitcast i32* %6 to i8*, !phasar.instruction.id !13, ID: 12 	V:  BOTTOM
D:	  %6 = load i32*, i32** %2, align 8, !phasar.instruction.id !10, ID: 9 	V:  BOTTOM
D:	  %4 = bitcast i8* %3 to i32*, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %9 = bitcast i32* %6 to i8*, !phasar.instruction.id !13, ID: 12 in function: main
D:	  %4 = bitcast i8* %3 to i32*, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %5 = load i32*, i32** %2, align 8, !phasar.instruction.id !8, ID: 7 	V:  BOTTOM
D:	  %6 = load i32*, i32** %2, align 8, !phasar.instruction.id !10, ID: 9 	V:  BOTTOM
D:	  %9 = bitcast i32* %6 to i8*, !phasar.instruction.id !13, ID: 12 	V:  BOTTOM
D:	  %3 = call i8* @_Znwm(i64 4) #3, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   call void @_ZdlPv(i8* %9) #4, !phasar.instruction.id !14, ID: 13 in function: main
D:	  %5 = load i32*, i32** %2, align 8, !phasar.instruction.id !8, ID: 7 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %3 = call i8* @_Znwm(i64 4) #3, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %6 = load i32*, i32** %2, align 8, !phasar.instruction.id !10, ID: 9 	V:  BOTTOM
D:	  %4 = bitcast i8* %3 to i32*, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %9 = bitcast i32* %6 to i8*, !phasar.instruction.id !13, ID: 12 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   br label %10, !phasar.instruction.id !15, ID: 14 in function: main
D:	  %4 = bitcast i8* %3 to i32*, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %5 = load i32*, i32** %2, align 8, !phasar.instruction.id !8, ID: 7 	V:  BOTTOM
D:	  %6 = load i32*, i32** %2, align 8, !phasar.instruction.id !10, ID: 9 	V:  BOTTOM
D:	  %9 = bitcast i32* %6 to i8*, !phasar.instruction.id !13, ID: 12 	V:  BOTTOM
D:	  %3 = call i8* @_Znwm(i64 4) #3, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   ret i32 0, !phasar.instruction.id !16, ID: 15 in function: main
D:	  %9 = bitcast i32* %6 to i8*, !phasar.instruction.id !13, ID: 12 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %3 = call i8* @_Znwm(i64 4) #3, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %6 = load i32*, i32** %2, align 8, !phasar.instruction.id !10, ID: 9 	V:  BOTTOM
D:	  %5 = load i32*, i32** %2, align 8, !phasar.instruction.id !8, ID: 7 	V:  BOTTOM
D:	  %4 = bitcast i8* %3 to i32*, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %7 = icmp eq i32* %6, null, !phasar.instruction.id !11, ID: 10 in function: main
D:	  %4 = bitcast i8* %3 to i32*, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %5 = load i32*, i32** %2, align 8, !phasar.instruction.id !8, ID: 7 	V:  BOTTOM
D:	  %6 = load i32*, i32** %2, align 8, !phasar.instruction.id !10, ID: 9 	V:  BOTTOM
D:	  %9 = bitcast i32* %6 to i8*, !phasar.instruction.id !13, ID: 12 	V:  BOTTOM
D:	  %3 = call i8* @_Znwm(i64 4) #3, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 42, i32* %4, align 4, !phasar.instruction.id !6, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32* %4, i32** %2, align 8, !phasar.instruction.id !7, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %3 = call i8* @_Znwm(i64 4) #3, !phasar.instruction.id !4, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
