### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N:   %1 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 0, i32* %1, align 4, !phasar.instruction.id !4, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 20, i32* %2, align 4, !phasar.instruction.id !9, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   br label %6, !phasar.instruction.id !10, ID: 9 in function: main
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   br i1 %4, label %5, label %6, !phasar.instruction.id !8, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 7, i32* %2, align 4, !phasar.instruction.id !5, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %3 = load i8, i8* @cond, align 1, !phasar.instruction.id !6, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   ret i32 0, !phasar.instruction.id !11, ID: 10 in function: main
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %2 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %4 = trunc i8 %3 to i1, !phasar.instruction.id !7, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
