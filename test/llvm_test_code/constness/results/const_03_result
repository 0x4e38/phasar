### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N:   %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 42, i32* %2, align 4, !phasar.instruction.id !7, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %6 = load i32, i32* %3, align 4, !phasar.instruction.id !10, ID: 9 in function: main
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 0, i32* %1, align 4, !phasar.instruction.id !6, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %7 = load i32, i32* %2, align 4, !phasar.instruction.id !11, ID: 10 in function: main
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %8 = add nsw i32 %6, %7, !phasar.instruction.id !12, ID: 11 in function: main
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 %8, i32* %3, align 4, !phasar.instruction.id !13, ID: 12 in function: main
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %1 = alloca i32, align 4, !phasar.instruction.id !1, ID: 0 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   call void @_ZL6escapePv(i8* %16), !phasar.instruction.id !25, ID: 24 in function: main
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %9 = load i32, i32* %4, align 4, !phasar.instruction.id !14, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %10 = load i32, i32* %2, align 4, !phasar.instruction.id !15, ID: 14 in function: main
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   call void @_ZL6escapePv(i8* %15), !phasar.instruction.id !23, ID: 22 in function: main
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 in function: main
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   call void @_ZL6escapePv(i8* %17), !phasar.instruction.id !27, ID: 26 in function: main
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   call void @_ZL6escapePv(i8* %18), !phasar.instruction.id !29, ID: 28 in function: main
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   ret i32 0, !phasar.instruction.id !30, ID: 29 in function: main
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i8* %0, i8** %2, align 8, !phasar.instruction.id !2, ID: 31 in function: _ZL6escapePv
D:	i8* %0 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %3 = load i8*, i8** %2, align 8, !phasar.instruction.id !3, ID: 32 in function: _ZL6escapePv
D:	i8* %0 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %11 = add nsw i32 %9, %10, !phasar.instruction.id !16, ID: 15 in function: main
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 %11, i32* %4, align 4, !phasar.instruction.id !17, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %12 = load i32, i32* %4, align 4, !phasar.instruction.id !18, ID: 17 in function: main
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %13 = load i32, i32* %4, align 4, !phasar.instruction.id !19, ID: 18 in function: main
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %14 = mul nsw i32 %12, %13, !phasar.instruction.id !20, ID: 19 in function: main
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 %14, i32* %5, align 4, !phasar.instruction.id !21, ID: 20 in function: main
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %2 = alloca i8*, align 8, !phasar.instruction.id !1, ID: 30 in function: _ZL6escapePv
D:	i8* %0 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 1, i32* %3, align 4, !phasar.instruction.id !8, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   store i32 2, i32* %4, align 4, !phasar.instruction.id !9, ID: 8 in function: main
D:	  %18 = bitcast i32* %5 to i8*, !phasar.instruction.id !28, ID: 27 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
D:	  %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 	V:  BOTTOM
D:	  %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 	V:  BOTTOM
D:	  %15 = bitcast i32* %2 to i8*, !phasar.instruction.id !22, ID: 21 	V:  BOTTOM
D:	  %17 = bitcast i32* %4 to i8*, !phasar.instruction.id !26, ID: 25 	V:  BOTTOM
D:	  %16 = bitcast i32* %3 to i8*, !phasar.instruction.id !24, ID: 23 	V:  BOTTOM
D:	  %4 = alloca i32, align 4, !phasar.instruction.id !4, ID: 3 	V:  BOTTOM
D:	  %3 = alloca i32, align 4, !phasar.instruction.id !3, ID: 2 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %5 = alloca i32, align 4, !phasar.instruction.id !5, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   call void asm sideeffect "", "imr,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %3) #2, !srcloc !4, !phasar.instruction.id !5, ID: 33 in function: _ZL6escapePv
D:	i8* %0 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   ret void, !phasar.instruction.id !6, ID: 34 in function: _ZL6escapePv
D:	i8* %0 	V:  BOTTOM
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
--- IFDS START RESULT RECORD ---
N:   %2 = alloca i32, align 4, !phasar.instruction.id !2, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4 	V:  BOTTOM
